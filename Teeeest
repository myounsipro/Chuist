
import org.junit.jupiter.api.Test;

import java.util.Set;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

class RestUserTest {

    @Test
    void from_shouldMapUserToRestUser() {
        // Arrange
        User user = mock(User.class);

        when(user.getUserPublicId()).thenReturn(new UserPublicId("public-123"));
        when(user.getFirstname()).thenReturn(new UserFirstname("Alice"));
        when(user.getLastName()).thenReturn(new UserLastName("Smith"));
        when(user.getEmail()).thenReturn(new UserEmail("alice@example.com"));
        when(user.getUserUid()).thenReturn(new UserUid("uid-456"));

        Authority authority = new Authority(new AuthorityName("ROLE_USER"));
        Set<Authority> authorities = Set.of(authority);
        when(user.getAuthorities()).thenReturn(authorities);

        // Act
        RestUser result = RestUser.from(user);

        // Assert
        assertEquals("public-123", result.publicId());
        assertEquals("Alice", result.firstName());
        assertEquals("Smith", result.lastName());
        assertEquals("alice@example.com", result.email());
        assertEquals("uid-456", result.userUid());

        Set<RestAuthority> restAuthorities = result.authorities();
        assertEquals(1, restAuthorities.size());
        assertTrue(restAuthorities.stream().anyMatch(a -> a.name().equals("ROLE_USER")));
    }
}