;
import org.junit.jupiter.api.Test;
import org.mockito.MockedStatic;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

class RoleTest {

    @Test
    void key_shouldReturnPrefixedName() {
        assertEquals("ROLE_ADMIN", Role.ADMIN.key());
        assertEquals("ROLE_USER", Role.USER.key());
        assertEquals("ROLE_UNKNOWN", Role.UNKNOWN.key());
    }

    @Test
    void from_shouldReturnMatchingEnum() {
        try (MockedStatic<Assert> mocked = mockStatic(Assert.class)) {
            Role result = Role.from("USER");
            assertEquals(Role.USER, result);
            mocked.verify(() -> Assert.notBlank("role", "USER"));
        }
    }

    @Test
    void from_shouldReturnUnknownIfNoMatch() {
        try (MockedStatic<Assert> mocked = mockStatic(Assert.class)) {
            Role result = Role.from("NON_EXISTING_ROLE");
            assertEquals(Role.UNKNOWN, result);
            mocked.verify(() -> Assert.notBlank("role", "NON_EXISTING_ROLE"));
        }
    }

    @Test
    void from_shouldThrowIfNull() {
        assertThrows(NullPointerException.class, () -> Role.from(null));
    }
}