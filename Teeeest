package com.bnpp.pf.octa.application.service;

;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.List;

import static java.util.Collections.singletonList;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

public class InvoiceApplicationServiceTest {

    private InvoiceRepository invoiceRepository;
    private InvoiceApplicationService service;

    @BeforeEach
    void setUp() {
        invoiceRepository = mock(InvoiceRepository.class);
        service = new InvoiceApplicationService(invoiceRepository);
    }

    @Test
    void testGetAllInvoice() {
        Invoice invoice = mock(Invoice.class);
        when(invoiceRepository.getAll()).thenReturn(List.of(invoice));

        List<RestInvoice> result = service.getAllInvoice();
        assertEquals(1, result.size());
    }

    @Test
    void testGetByInvoiceNumber() {
        String invoiceNumber = "INV-001";
        Invoice invoice = mock(Invoice.class);
        when(invoiceRepository.getByInvoiceNumber(invoiceNumber)).thenReturn(List.of(invoice));

        List<RestInvoice> result = service.getByInvoiceNumber(invoiceNumber);
        assertEquals(1, result.size());
    }

    @Test
    void testGetLatestInvoices() {
        PaginationRequest request = mock(PaginationRequest.class);
        Invoice invoice = mock(Invoice.class);
        PaginatedResult<Invoice> paginatedInvoices = new PaginatedResult<>(
                List.of(invoice), 1, 1
        );

        when(invoiceRepository.getLatestInvoices(request)).thenReturn(paginatedInvoices);

        PaginatedResult<RestInvoice> result = service.getLatestInvoices(request);

        assertEquals(1, result.totalElements());
        assertEquals(1, result.totalPages());
        assertEquals(1, result.content().size());
    }
}