import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import org.junit.jupiter.api.Test;

import java.util.List;

public class InvoiceLineEntityTest {

    @Test
    void testFrom() {
        InvoiceLine invoiceLine = mock(InvoiceLine.class);
        when(invoiceLine.getId()).thenReturn(1L);
        when(invoiceLine.getInvoiceId()).thenReturn(100L);
        when(invoiceLine.getFinancialCompany()).thenReturn("TestCompany");
        when(invoiceLine.getTotalVat()).thenReturn(99.99);
        when(invoiceLine.getNumberOfFiles()).thenReturn(5);

        InvoiceLineEntity entity = InvoiceLineEntity.from(invoiceLine);

        assertEquals(1L, entity.getEntityId());
        assertEquals(100L, entity.getEntityInvoiceId());
        assertEquals("TestCompany", entity.getEntityFinancialCompany());
        assertEquals(99.99, entity.getEntityTotalVat());
        assertEquals(5, entity.getEntityNumberOfFiles());
    }

    @Test
    void testToDomain() {
        InvoiceLineEntity entity = new InvoiceLineEntity();
        entity.setEntityId(2L);
        entity.setEntityInvoiceId(200L);
        entity.setEntityFinancialCompany("AnotherCompany");
        entity.setEntityTotalVat(49.99);
        entity.setEntityNumberOfFiles(3);

        InvoiceLine domain = InvoiceLineEntity.toDomain(entity);

        assertEquals(2L, domain.getId());
        assertEquals(200L, domain.getInvoiceId());
        assertEquals("AnotherCompany", domain.getFinancialCompany());
        assertEquals(49.99, domain.getTotalVat());
        assertEquals(3, domain.getNumberOfFiles());
    }

    @Test
    void testFromList() {
        InvoiceLine invoiceLine = mock(InvoiceLine.class);
        when(invoiceLine.getId()).thenReturn(1L);
        when(invoiceLine.getInvoiceId()).thenReturn(100L);
        when(invoiceLine.getFinancialCompany()).thenReturn("TestCompany");
        when(invoiceLine.getTotalVat()).thenReturn(99.99);
        when(invoiceLine.getNumberOfFiles()).thenReturn(5);

        List<InvoiceLineEntity> entities = InvoiceLineEntity.fromList(List.of(invoiceLine));

        assertEquals(1, entities.size());
        InvoiceLineEntity entity = entities.get(0);
        assertEquals(1L, entity.getEntityId());
    }

    @Test
    void testToDomainList() {
        InvoiceLineEntity entity = new InvoiceLineEntity();
        entity.setEntityId(2L);
        entity.setEntityInvoiceId(200L);
        entity.setEntityFinancialCompany("AnotherCompany");
        entity.setEntityTotalVat(49.99);
        entity.setEntityNumberOfFiles(3);

        List<InvoiceLine> domainList = InvoiceLineEntity.toDomainList(List.of(entity));

        assertEquals(1, domainList.size());
        InvoiceLine domain = domainList.get(0);
        assertEquals("AnotherCompany", domain.getFinancialCompany());
    }
}