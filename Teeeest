@Test
void shouldThrowFileRetrievalException_onIOException() {
    String fileName = "error.xlsx";
    S3Object s3Object = mock(S3Object.class);
    InputStream faultyStream = mock(InputStream.class);

    when(amazonS3.getObject(any(GetObjectRequest.class))).thenReturn(s3Object);
    when(s3Object.getObjectContent()).thenReturn(new S3ObjectInputStream(faultyStream, null));

    try {
        doThrow(new IOException("IO fail")).when(faultyStream).transferTo(any());
    } catch (IOException ignored) {}

    FileRetrievalException ex = assertThrows(FileRetrievalException.class, () ->
        cosClient.downloadExcelFilesAsZip(List.of(fileName))
    );

    String expected = CosErrorMessage.IO_ERROR.format("my-bucket", fileName);
    assertTrue(ex.getMessage().contains(expected));
}



@Test
void shouldThrowFileNotFoundInS3Exception_when404() {
    String fileName = "notfound.xlsx";
    AmazonS3Exception s3e = new AmazonS3Exception("Not found");
    s3e.setStatusCode(404);

    when(amazonS3.getObject(any(GetObjectRequest.class))).thenThrow(s3e);

    FileNotFoundInS3Exception ex = assertThrows(FileNotFoundInS3Exception.class, () ->
        cosClient.downloadExcelFilesAsZip(List.of(fileName))
    );

    String expected = CosErrorMessage.FILE_NOT_FOUND.format(fileName);
    assertTrue(ex.getMessage().contains(expected));
}