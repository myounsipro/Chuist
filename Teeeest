@ExtendWith(MockitoExtension.class)
class InvoiceFileReaderWriterTest {

    @Mock
    private InvoiceFileRepository invoiceFileRepository;

    @InjectMocks
    private InvoiceFileReaderWriter readerWriter;

    @Test
    void shouldGetLatestInvoices() {
        PaginationRequest request = new PaginationRequest(1, 10);
        PaginatedResult<InvoiceFile> expected = mock(PaginatedResult.class);

        when(invoiceFileRepository.findLatestInvoiceFiles(request)).thenReturn(expected);

        PaginatedResult<InvoiceFile> result = readerWriter.getLatestInvoices(request);

        assertEquals(expected, result);
    }

    @Test
    void shouldGetAllByInvoiceDate() {
        String period = "2024-12";
        List<InvoiceFile> expected = List.of(mock(InvoiceFile.class));

        when(invoiceFileRepository.getAllByInvoiceDate(period)).thenReturn(expected);

        List<InvoiceFile> result = readerWriter.getAll(period);

        assertEquals(expected, result);
    }

    @Test
    void shouldFindDistinctInvoiceFileDates() {
        List<String> expected = List.of("2024-01", "2024-02");

        when(invoiceFileRepository.findDistinctInvoiceFileDates()).thenReturn(expected);

        List<String> result = readerWriter.findDistinctInvoiceFileDates();

        assertEquals(expected, result);
    }
}