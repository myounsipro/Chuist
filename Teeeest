import org.junit.jupiter.api.Test;

import java.time.Instant;

import static org.junit.jupiter.api.Assertions.*;

class NotBeforeTimeExceptionTest {

    @Test
    void strictlyNotBefore_shouldBuildCorrectException() {
        // Given
        Instant value = Instant.parse("2024-01-01T10:00:00Z");
        Instant other = Instant.parse("2024-01-01T12:00:00Z");
        String field = "startDate";

        NotBeforeTimeException ex = NotBeforeTimeException.strictlyNotBefore()
                .value(value)
                .field(field)
                .other(other);

        // Then
        String expectedMsg = "Time 2024-01-01T10:00:00Z in \"startDate\" must be strictly before 2024-01-01T12:00:00Z but wasn't.";
        assertEquals(expectedMsg, ex.getMessage());
        assertEquals(AssertionErrorType.NOT_BEFORE_TIME, ex.type());
    }

    @Test
    void notBefore_shouldBuildCorrectException() {
        // Given
        Instant value = Instant.parse("2023-12-31T23:59:59Z");
        Instant other = Instant.parse("2024-01-01T00:00:00Z");
        String field = "limit";

        NotBeforeTimeException ex = NotBeforeTimeException.notBefore()
                .value(value)
                .field(field)
                .other(other);

        // Then
        String expectedMsg = "Time 2023-12-31T23:59:59Z in \"limit\" must be before 2024-01-01T00:00:00Z but wasn't.";
        assertEquals(expectedMsg, ex.getMessage());
        assertEquals(AssertionErrorType.NOT_BEFORE_TIME, ex.type());
    }
}