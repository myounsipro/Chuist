@ExtendWith(MockitoExtension.class)
class CosClientImplTest {

    @Mock
    private AmazonS3 amazonS3;

    private CosClientImpl cosClient;
    private final String bucketName = "my-bucket";

    @BeforeEach
    void setup() {
        cosClient = new CosClientImpl(bucketName, amazonS3);
    }

    @Test
    void shouldDownloadFilesAsZip() throws IOException {
        String fileName = "folder/file1.xlsx";
        byte[] fileData = "file-content".getBytes();

        S3Object s3Object = mock(S3Object.class);
        when(amazonS3.getObject(eq(bucketName), eq(fileName))).thenReturn(s3Object);
        when(s3Object.getObjectContent())
                .thenReturn(new S3ObjectInputStream(new ByteArrayInputStream(fileData), null));

        File result = cosClient.downloadExcelFilesAsZip(List.of(fileName));

        assertTrue(result.exists());
        assertTrue(result.getName().endsWith(".zip"));
        assertTrue(result.length() > 0);

        result.delete(); // Clean up temp file
    }

    @Test
    void shouldThrowFileNotFoundInS3Exception_when404() {
        String fileName = "missing.xlsx";
        AmazonS3Exception ex = new AmazonS3Exception("Not Found");
        ex.setStatusCode(404);

        when(amazonS3.getObject(eq(bucketName), eq(fileName))).thenThrow(ex);

        FileNotFoundInS3Exception thrown = assertThrows(
            FileNotFoundInS3Exception.class,
            () -> cosClient.downloadExcelFilesAsZip(List.of(fileName))
        );

        assertEquals(fileName, thrown.getFilename());
    }

    @Test
    void shouldThrowFileRetrievalException_whenOtherS3Error() {
        String fileName = "error.xlsx";
        AmazonS3Exception ex = new AmazonS3Exception("Access Denied");
        ex.setStatusCode(403);

        when(amazonS3.getObject(eq(bucketName), eq(fileName))).thenThrow(ex);

        assertThrows(FileRetrievalException.class,
            () -> cosClient.downloadExcelFilesAsZip(List.of(fileName)));
    }

    @Test
    void shouldThrowFileRetrievalException_onIOException() {
        String fileName = "bad.xlsx";

        S3Object s3Object = mock(S3Object.class);
        InputStream faultyStream = mock(InputStream.class);

        when(amazonS3.getObject(eq(bucketName), eq(fileName))).thenReturn(s3Object);
        when(s3Object.getObjectContent()).thenReturn(new S3ObjectInputStream(faultyStream, null));

        try {
            doThrow(new IOException("IO failed")).when(faultyStream).transferTo(any());
        } catch (IOException ignored) {}

        assertThrows(FileRetrievalException.class,
            () -> cosClient.downloadExcelFilesAsZip(List.of(fileName)));
    }
}