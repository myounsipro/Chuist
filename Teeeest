import { FilteredInvoiceComponent } from './filtered-invoice.component';
import { of, throwError } from 'rxjs';

describe('FilteredInvoiceComponent', () => {
  let component: FilteredInvoiceComponent;
  let fileServiceMock: any;

  beforeEach(() => {
    fileServiceMock = {
      getFilters: jest.fn()
    };

    component = new FilteredInvoiceComponent(
      {} as any,         // invoiceService
      fileServiceMock,
      {} as any,         // snackbarPF
      {} as any          // documentService
    );
  });

  it('should log error when getFilters fails', () => {
    const consoleSpy = jest.spyOn(console, 'error').mockImplementation(() => {});
    const fakeError = new Error('backend down');

    fileServiceMock.getFilters.mockReturnValue(throwError(() => fakeError));

    component.loadFilters();

    expect(consoleSpy).toHaveBeenCalledWith(
      'Error during fetching filtredInvoices: ',
      fakeError
    );

    consoleSpy.mockRestore();
  });
});