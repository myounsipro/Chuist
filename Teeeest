import org.junit.jupiter.api.Test;

import java.time.Instant;

import static org.junit.jupiter.api.Assertions.*;

class NotAfterTimeExceptionTest {

    @Test
    void strictlyNotAfter_shouldBuildExceptionWithCorrectMessage() {
        // Given
        Instant value = Instant.parse("2024-06-01T10:00:00Z");
        Instant other = Instant.parse("2024-06-01T08:00:00Z");
        String field = "endDate";

        NotAfterTimeException ex = NotAfterTimeException.strictlyNotAfter()
                .value(value)
                .field(field)
                .other(other);

        // Then
        String expectedMessage = "Time 2024-06-01T10:00:00Z in \"endDate\" must be strictly after 2024-06-01T08:00:00Z but wasn't.";
        assertEquals(expectedMessage, ex.getMessage());
        assertEquals(AssertionErrorType.NOT_AFTER_TIME, ex.type());
    }

    @Test
    void notAfter_shouldBuildExceptionWithCorrectMessage() {
        // Given
        Instant value = Instant.parse("2024-05-31T12:00:00Z");
        Instant other = Instant.parse("2024-06-01T00:00:00Z");
        String field = "deadline";

        NotAfterTimeException ex = NotAfterTimeException.notAfter()
                .value(value)
                .field(field)
                .other(other);

        // Then
        String expectedMessage = "Time 2024-05-31T12:00:00Z in \"deadline\" must be after 2024-06-01T00:00:00Z but wasn't.";
        assertEquals(expectedMessage, ex.getMessage());
        assertEquals(AssertionErrorType.NOT_AFTER_TIME, ex.type());
    }
}